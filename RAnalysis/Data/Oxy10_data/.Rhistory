plot(model, rank=1)
#if you want data from this model, name the summary for extraction--------------
sum.table<-summary(model)
# output file (FILL THIS IN) -----------------------------------
Date <- 20180804
ID <- 1
OXY10_channel <- 1
Biovolume <- 850 # ml
shell_length <- ((3 +(6/16))*0.0254) # inches on measuring tape converted to meters
shell_width <- ((5)*0.0254) # inches on measuring tape converted to meters
treatment <- "ambient"
tank <- "spawn/broodstock"
#load Data------------------------------------------------------------------------------------------
resp<-read.csv(file.path(path,respfile), header=T, sep=",", na.string="NA", as.is=T)
# take a look at the file
resp
# assign headers----------------------------------------------------------------------------------
resp.data <- resp[,c(2,6,9)] #select columns = 26 total (Date + Time + 24 vials on SDR plate)
resp.data
colnames(resp.data) <- c('Time' , 'sensor', 'oxygen')
resp.data$time <- sapply(strsplit(resp.data$Time,":"),
function(x) {
x <- as.numeric(x)
x[1]*60+x[2]+x[3]/60
}
)
# time is in decimal form--------------------------------------------------
resp.data$time
# convert to minutes--------------------------------------------------
resp.data$minutes <- (resp.data$time - resp.data$time[1])
# take alook at your dataset--------------------------------------------------
resp.data
# take alook at your dataset--------------------------------------------------
resp.data.2
# make a model for one of your data sets---------------------------------------
model<-rankLocReg(
xall=resp.data.2$minutes,yall=resp.data.2$oxygen,
alpha=0.2, method="pc", verbose=TRUE)
# Which alpha value gets Leq or Lpc at center of density peak? --------------
alpha <- 0.2
#plot the model----------------------------------------------------------------
plot(model, rank=1)
#if you want data from this model, name the summary for extraction--------------
sum.table<-summary(model)
#take data from your model summary (example is the slope and range of confidence interval)
resp.table <- data.frame(matrix(nrow = 1, ncol = 16))
colnames(resp.table)<-c('Date', 'ID','OXY10_channel', 'tank', 'treatment', 'Biovolume', 'length', 'width', 'SDR_position','number_indivs','b1.Lz',
'b1.Leq', 'b1.Lpc', 'ci.Lz', 'ci.Leq', 'ci.Lpc', 'alpha', 'Notes')
resp.data.2
resp.table
#if you want data from this model, name the summary for extraction--------------
sum.table<-summary(model)
#take data from your model summary (example is the slope and range of confidence interval)
resp.table <- data.frame(matrix(nrow = 1, ncol = 16))
nrows<-nrow(resp.data.2[3,26])
colnames(resp.table)<-c('Date', 'ID','OXY10_channel', 'tank', 'treatment', 'Biovolume', 'length', 'width', 'SDR_position','number_indivs','b1.Lz',
'b1.Leq', 'b1.Lpc', 'ci.Lz', 'ci.Leq', 'ci.Lpc', 'alpha', 'Notes')
#take data from your model summary (example is the slope and range of confidence interval)
resp.table <- data.frame(matrix(nrow = 1, ncol = 18))
nrows<-nrow(resp.data.2[3,26])
colnames(resp.table)<-c('Date', 'ID','OXY10_channel', 'tank', 'treatment', 'Biovolume', 'length', 'width', 'SDR_position','number_indivs','b1.Lz',
'b1.Leq', 'b1.Lpc', 'ci.Lz', 'ci.Leq', 'ci.Lpc', 'alpha', 'Notes')
resp.table
resp.table$Date <- Date
resp.table$ID <- ID
resp.table$OXY10_channel <- OXY10_channel
resp.table$Biovolume <- Biovolume
resp.table$length <- shell_length
resp.table$shell_width <- shell_width
resp.table$treatment <- treatment
resp.table$tank <- tank
#extract b1
sum.table$Lcompare
resp.table$b1.Lz<-sum.table$Lcompare[1,6]
resp.table$b1.Leq<-sum.table$Lcompare[2,6]
resp.table$b1.Lpc<-sum.table$Lcompare[3,6]
#extract ci range
resp.table$ci.Lz<-sum.table$Lcompare[1,9]
resp.table$ci.Leq<-sum.table$Lcompare[2,9]
resp.table$ci.Lpc<-sum.table$Lcompare[3,9]
resp.table$alpha <- alpha
#Cumulative resp data
all.data <- read.csv("All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv", header=TRUE, sep=",")
update.data <- rbind(all.data , resp.table)
write.table(update.data,"All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv",sep=",", row.names=FALSE)
write.table(update.data,"All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv",sep=",", row.names=FALSE)
#Cumulative resp data
all.data <- read.csv("All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv", header=TRUE, sep=",")
update.data <- rbind(all.data , resp.table)
write.table(update.data,"All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv",sep=",", row.names=FALSE)
#take data from your model summary (example is the slope and range of confidence interval)
resp.table <- data.frame(matrix(nrow = 1, ncol = 16))
nrows<-nrow(resp.data.2[3,26])
colnames(resp.table)<-c('Date', 'ID','OXY10_channel', 'tank', 'treatment', 'Biovolume', 'length', 'width','b1.Lz',
'b1.Leq', 'b1.Lpc', 'ci.Lz', 'ci.Leq', 'ci.Lpc', 'alpha', 'Notes')
resp.table$Date <- Date
resp.table$ID <- ID
resp.table$OXY10_channel <- OXY10_channel
resp.table$Biovolume <- Biovolume
resp.table$shell_width <- shell_width
resp.table$treatment <- treatment
resp.table$length <- shell_length
resp.table$tank <- tank
#extract b1
sum.table$Lcompare
resp.table$b1.Lz<-sum.table$Lcompare[1,6]
resp.table$b1.Leq<-sum.table$Lcompare[2,6]
resp.table$b1.Lpc<-sum.table$Lcompare[3,6]
#extract ci range
resp.table$ci.Lz<-sum.table$Lcompare[1,9]
resp.table$ci.Leq<-sum.table$Lcompare[2,9]
resp.table$ci.Lpc<-sum.table$Lcompare[3,9]
resp.table$alpha <- alpha
#Cumulative resp data
all.data <- read.csv("All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv", header=TRUE, sep=",")
update.data <- rbind(all.data , resp.table)
write.table(update.data,"All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv",sep=",", row.names=FALSE)
shell_width
# output file (FILL THIS IN) -----------------------------------
Date <- 20180804
ID <- 1
OXY10_channel <- 1
Biovolume <- 850 # ml
shell_length <- ((3 +(6/16))*0.0254) # inches on measuring tape converted to meters
shell_width <- ((5)*0.0254) # inches on measuring tape converted to meters
treatment <- "ambient"
tank <- "spawn/broodstock"
#load Data------------------------------------------------------------------------------------------
resp<-read.csv(file.path(path,respfile), header=T, sep=",", na.string="NA", as.is=T)
# take a look at the file
resp
# assign headers----------------------------------------------------------------------------------
resp.data <- resp[,c(2,6,9)] #select columns = 26 total (Date + Time + 24 vials on SDR plate)
resp.data
colnames(resp.data) <- c('Time' , 'sensor', 'oxygen')
resp.data$time <- sapply(strsplit(resp.data$Time,":"),
function(x) {
x <- as.numeric(x)
x[1]*60+x[2]+x[3]/60
}
)
# convert to minutes--------------------------------------------------
resp.data$minutes <- (resp.data$time - resp.data$time[1])
# take alook at your dataset--------------------------------------------------
resp.data
# take alook at your dataset--------------------------------------------------
resp.data.2
# convert dataset to every 15 values to speed up LoLin analysis--------------------------------------------------
resp.data.2 <- resp.data[seq(1, nrow(resp.data), 15), ]
# here is a test of the commands for LoLinR---------------------------------------
#read about it here
#?rankLocReg
library(LoLinR)
# make a model for one of your data sets---------------------------------------
model<-rankLocReg(
xall=resp.data.2$minutes,yall=resp.data.2$oxygen,
alpha=0.2, method="pc", verbose=TRUE)
# Which alpha value gets Leq or Lpc at center of density peak? --------------
alpha <- 0.2
#plot the model----------------------------------------------------------------
plot(model, rank=1)
#if you want data from this model, name the summary for extraction--------------
sum.table<-summary(model)
#take data from your model summary (example is the slope and range of confidence interval)
resp.table <- data.frame(matrix(nrow = 1, ncol = 16))
nrows<-nrow(resp.data.2[3,26])
colnames(resp.table)<-c('Date', 'ID','OXY10_channel', 'tank', 'treatment', 'Biovolume', 'length', 'width','b1.Lz',
'b1.Leq', 'b1.Lpc', 'ci.Lz', 'ci.Leq', 'ci.Lpc', 'alpha', 'Notes')
resp.table$Date <- Date
resp.table$ID <- ID
resp.table$OXY10_channel <- OXY10_channel
resp.table$Biovolume <- Biovolume
resp.table$length <- shell_length
resp.table$shell_width <- shell_width
resp.table$treatment <- treatment
resp.table$tank <- tank
#extract b1
sum.table$Lcompare
resp.table$b1.Lz<-sum.table$Lcompare[1,6]
resp.table$b1.Leq<-sum.table$Lcompare[2,6]
resp.table$b1.Lpc<-sum.table$Lcompare[3,6]
#extract ci range
resp.table$ci.Lz<-sum.table$Lcompare[1,9]
resp.table$ci.Leq<-sum.table$Lcompare[2,9]
resp.table$ci.Lpc<-sum.table$Lcompare[3,9]
resp.table$alpha <- alpha
#Cumulative resp data
all.data <- read.csv("All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv", header=TRUE, sep=",")
update.data <- rbind(all.data , resp.table)
write.table(update.data,"All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv",sep=",", row.names=FALSE)
# output file (FILL THIS IN) -----------------------------------
Date <- 20180804
ID <- 1
OXY10_channel <- 1
Biovolume <- 850 # ml
# length = 1
l <- (3+(3/16))
shell_length <- (((l)*0.0254)*1000) # inches on measuring tape converted to mm
# width = w
w <- 5
shell_width <- (((w)*0.0254)*1000) # inches on measuring tape converted to mm
treatment <- "ambient"
tank <- "spawn/broodstock"
#load Data------------------------------------------------------------------------------------------
resp<-read.csv(file.path(path,respfile), header=T, sep=",", na.string="NA", as.is=T)
# take a look at the file
resp
# assign headers----------------------------------------------------------------------------------
resp.data <- resp[,c(2,6,9)] #select columns = 26 total (Date + Time + 24 vials on SDR plate)
resp.data
colnames(resp.data) <- c('Time' , 'sensor', 'oxygen')
resp.data$time <- sapply(strsplit(resp.data$Time,":"),
function(x) {
x <- as.numeric(x)
x[1]*60+x[2]+x[3]/60
}
)
# convert to minutes--------------------------------------------------
resp.data$minutes <- (resp.data$time - resp.data$time[1])
# take alook at your dataset--------------------------------------------------
resp.data
# convert dataset to every 15 values to speed up LoLin analysis--------------------------------------------------
resp.data.2 <- resp.data[seq(1, nrow(resp.data), 15), ]
# take alook at your dataset--------------------------------------------------
resp.data.2
# make a model for one of your data sets---------------------------------------
model<-rankLocReg(
xall=resp.data.2$minutes,yall=resp.data.2$oxygen,
alpha=0.2, method="pc", verbose=TRUE)
# here is a test of the commands for LoLinR---------------------------------------
#read about it here
#?rankLocReg
library(LoLinR)
# Which alpha value gets Leq or Lpc at center of density peak? --------------
alpha <- 0.2
#plot the model----------------------------------------------------------------
plot(model, rank=1)
#if you want data from this model, name the summary for extraction--------------
sum.table<-summary(model)
#take data from your model summary (example is the slope and range of confidence interval)
resp.table <- data.frame(matrix(nrow = 1, ncol = 16))
nrows<-nrow(resp.data.2[3,26])
colnames(resp.table)<-c('Date', 'ID','OXY10_channel', 'tank', 'treatment', 'Biovolume', 'length', 'width','b1.Lz',
'b1.Leq', 'b1.Lpc', 'ci.Lz', 'ci.Leq', 'ci.Lpc', 'alpha', 'Notes')
resp.table$Date <- Date
resp.table$ID <- ID
resp.table$OXY10_channel <- OXY10_channel
resp.table$Biovolume <- Biovolume
resp.table$length <- shell_length
resp.table$width <- shell_width
resp.table$treatment <- treatment
resp.table$tank <- tank
#extract b1
sum.table$Lcompare
resp.table$b1.Lz<-sum.table$Lcompare[1,6]
resp.table$b1.Leq<-sum.table$Lcompare[2,6]
resp.table$b1.Lpc<-sum.table$Lcompare[3,6]
#extract ci range
resp.table$ci.Lz<-sum.table$Lcompare[1,9]
resp.table$ci.Leq<-sum.table$Lcompare[2,9]
resp.table$ci.Lpc<-sum.table$Lcompare[3,9]
resp.table$alpha <- alpha
#Cumulative resp data
all.data <- read.csv("All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv", header=TRUE, sep=",")
update.data <- rbind(all.data , resp.table)
write.table(update.data,"All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv",sep=",", row.names=FALSE)
setwd("C:/Users/samjg/Documents/Notebook/data/Geoduck_Conditioning/RAnalysis/Data/Oxy10_data")
main<-getwd()
#CHANGE THESE VALUES EVERY DAY----------------------------------------------------------------------
path<-"All_data_csv" #the location of all your titration files
respfile<-"20180804_ch_2.csv" # name of your file with resp data
# output file (FILL THIS IN) -----------------------------------
Date <- 20180804
ID <- 2
OXY10_channel <- 2
Biovolume <- 1250 #ml
# length = 1
l <- (3+(6/16))
shell_length <- (((l)*0.0254)*1000) # inches on measuring tape converted to mm
# width = w
w <- (5+(10/16))
shell_width <- (((w)*0.0254)*1000) # inches on measuring tape converted to mm
treatment <- "ambient"
tank <- "spawn/broodstock"
#load Data------------------------------------------------------------------------------------------
resp<-read.csv(file.path(path,respfile), header=T, sep=",", na.string="NA", as.is=T)
# take a look at the file
resp
# assign headers----------------------------------------------------------------------------------
resp.data <- resp[,c(2,6,9)] #select columns = 26 total (Date + Time + 24 vials on SDR plate)
resp.data
colnames(resp.data) <- c('Time' , 'sensor', 'oxygen')
resp.data$time <- sapply(strsplit(resp.data$Time,":"),
function(x) {
x <- as.numeric(x)
x[1]*60+x[2]+x[3]/60
}
)
# convert to minutes--------------------------------------------------
resp.data$minutes <- (resp.data$time - resp.data$time[1])
# take alook at your dataset--------------------------------------------------
resp.data
# convert dataset to every 15 values to speed up LoLin analysis--------------------------------------------------
resp.data.2 <- resp.data[seq(1, nrow(resp.data), 15), ]
# take alook at your dataset--------------------------------------------------
resp.data.2
# make a model for one of your data sets---------------------------------------
model<-rankLocReg(
xall=resp.data.2$minutes,yall=resp.data.2$oxygen,
alpha=0.2, method="pc", verbose=TRUE)
# here is a test of the commands for LoLinR---------------------------------------
#read about it here
#?rankLocReg
library(LoLinR)
# Which alpha value gets Leq or Lpc at center of density peak? --------------
alpha <- 0.2
#plot the model----------------------------------------------------------------
plot(model, rank=1)
#if you want data from this model, name the summary for extraction--------------
sum.table<-summary(model)
#take data from your model summary (example is the slope and range of confidence interval)
resp.table <- data.frame(matrix(nrow = 1, ncol = 16))
nrows<-nrow(resp.data.2[3,26])
colnames(resp.table)<-c('Date', 'ID','OXY10_channel', 'tank', 'treatment', 'Biovolume', 'length', 'width','b1.Lz',
'b1.Leq', 'b1.Lpc', 'ci.Lz', 'ci.Leq', 'ci.Lpc', 'alpha', 'Notes')
#assign variables in output table
resp.table$Date <- Date
resp.table$ID <- ID
resp.table$OXY10_channel <- OXY10_channel
resp.table$Biovolume <- Biovolume
resp.table$length <- shell_length
resp.table$width <- shell_width
resp.table$treatment <- treatment
resp.table$tank <- tank
#extract b1
sum.table$Lcompare
resp.table$b1.Lz<-sum.table$Lcompare[1,6]
resp.table$b1.Leq<-sum.table$Lcompare[2,6]
resp.table$b1.Lpc<-sum.table$Lcompare[3,6]
#extract ci range
resp.table$ci.Lz<-sum.table$Lcompare[1,9]
resp.table$ci.Leq<-sum.table$Lcompare[2,9]
resp.table$ci.Lpc<-sum.table$Lcompare[3,9]
resp.table$alpha <- alpha
#Cumulative resp data
all.data <- read.csv("All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv", header=TRUE, sep=",")
update.data <- rbind(all.data , resp.table)
write.table(update.data,"All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv",sep=",", row.names=FALSE)
setwd("C:/Users/samjg/Documents/Notebook/data/Geoduck_Conditioning/RAnalysis/Data/Oxy10_data")
main<-getwd()
#CHANGE THESE VALUES EVERY DAY----------------------------------------------------------------------
path<-"All_data_csv" #the location of all your titration files
respfile<-"20180804_ch_3.csv" # name of your file with resp data
# output file (FILL THIS IN) -----------------------------------
Date <- 20180804
ID <- 3
OXY10_channel <- 3
Biovolume <- 920 #ml
# length = 1
l <- 2.15
shell_length <- (((l)*0.0254)*1000) # inches on measuring tape converted to mm
# width = w
w <- (4+(11/16))
shell_width <- (((w)*0.0254)*1000) # inches on measuring tape converted to mm
treatment <- "ambient"
tank <- "spawn/broodstock"
#load Data------------------------------------------------------------------------------------------
resp<-read.csv(file.path(path,respfile), header=T, sep=",", na.string="NA", as.is=T)
# take a look at the file
resp
# assign headers----------------------------------------------------------------------------------
resp.data <- resp[,c(2,6,9)] #select columns = 26 total (Date + Time + 24 vials on SDR plate)
resp.data
colnames(resp.data) <- c('Time' , 'sensor', 'oxygen')
resp.data$time <- sapply(strsplit(resp.data$Time,":"),
function(x) {
x <- as.numeric(x)
x[1]*60+x[2]+x[3]/60
}
)
# convert to minutes--------------------------------------------------
resp.data$minutes <- (resp.data$time - resp.data$time[1])
# take alook at your dataset--------------------------------------------------
resp.data
# convert dataset to every 15 values to speed up LoLin analysis--------------------------------------------------
resp.data.2 <- resp.data[seq(1, nrow(resp.data), 15), ]
# take alook at your dataset--------------------------------------------------
resp.data.2
# here is a test of the commands for LoLinR---------------------------------------
#read about it here
#?rankLocReg
library(LoLinR)
# make a model for one of your data sets---------------------------------------
model<-rankLocReg(
xall=resp.data.2$minutes,yall=resp.data.2$oxygen,
alpha=0.2, method="pc", verbose=TRUE)
# Which alpha value gets Leq or Lpc at center of density peak? --------------
alpha <- 0.2
#plot the model----------------------------------------------------------------
plot(model, rank=1)
#if you want data from this model, name the summary for extraction--------------
sum.table<-summary(model)
#take data from your model summary (example is the slope and range of confidence interval)
resp.table <- data.frame(matrix(nrow = 1, ncol = 16))
nrows<-nrow(resp.data.2[3,26])
colnames(resp.table)<-c('Date', 'ID','OXY10_channel', 'tank', 'treatment', 'Biovolume', 'length', 'width','b1.Lz',
'b1.Leq', 'b1.Lpc', 'ci.Lz', 'ci.Leq', 'ci.Lpc', 'alpha', 'Notes')
resp.table$ID <- ID
resp.table$Biovolume <- Biovolume
resp.table$length <- shell_length
resp.table$width <- shell_width
resp.table$treatment <- treatment
resp.table$tank <- tank
#extract b1
sum.table$Lcompare
resp.table$b1.Lz<-sum.table$Lcompare[1,6]
resp.table$b1.Leq<-sum.table$Lcompare[2,6]
resp.table$b1.Lpc<-sum.table$Lcompare[3,6]
#extract ci range
resp.table$ci.Lz<-sum.table$Lcompare[1,9]
resp.table$ci.Leq<-sum.table$Lcompare[2,9]
resp.table$ci.Lpc<-sum.table$Lcompare[3,9]
resp.table$alpha <- alpha
#Cumulative resp data
all.data <- read.csv("All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv", header=TRUE, sep=",")
update.data <- rbind(all.data , resp.table)
write.table(update.data,"All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv",sep=",", row.names=FALSE)
resp.table$OXY10_channel <- OXY10_channel
#assign variables in output table
resp.table$Date <- Date
setwd("C:/Users/samjg/Documents/Notebook/data/Geoduck_Conditioning/RAnalysis/Data/Oxy10_data")
main<-getwd()
#CHANGE THESE VALUES EVERY DAY----------------------------------------------------------------------
path<-"All_data_csv" #the location of all your titration files
respfile<-"20180804_ch_4.csv" # name of your file with resp data
ID <- "blank"
Biovolume <-  #ml
# length = 1
l <- #2.15
shell_length <- #(((l)*0.0254)*1000) # inches on measuring tape converted to mm
# width = w
w <- #(4+(11/16))
shell_width <- #(((w)*0.0254)*1000) # inches on measuring tape converted to mm
treatment <- "ambient"
# output file (FILL THIS IN) -----------------------------------
Date <- 20180804
#load Data------------------------------------------------------------------------------------------
resp<-read.csv(file.path(path,respfile), header=T, sep=",", na.string="NA", as.is=T)
OXY10_channel <- 4
# take a look at the file
resp
# assign headers----------------------------------------------------------------------------------
resp.data <- resp[,c(2,6,9)] #select columns = 26 total (Date + Time + 24 vials on SDR plate)
colnames(resp.data) <- c('Time' , 'sensor', 'oxygen')
resp.data$time <- sapply(strsplit(resp.data$Time,":"),
function(x) {
x <- as.numeric(x)
x[1]*60+x[2]+x[3]/60
}
)
# convert to minutes--------------------------------------------------
resp.data$minutes <- (resp.data$time - resp.data$time[1])
# convert dataset to every 15 values to speed up LoLin analysis--------------------------------------------------
resp.data.2 <- resp.data[seq(1, nrow(resp.data), 15), ]
# take alook at your dataset--------------------------------------------------
resp.data.2
# here is a test of the commands for LoLinR---------------------------------------
#read about it here
#?rankLocReg
library(LoLinR)
# make a model for one of your data sets---------------------------------------
model<-rankLocReg(
xall=resp.data.2$minutes,yall=resp.data.2$oxygen,
alpha=0.2, method="pc", verbose=TRUE)
#plot the model----------------------------------------------------------------
plot(model, rank=1)
#if you want data from this model, name the summary for extraction--------------
sum.table<-summary(model)
#take data from your model summary (example is the slope and range of confidence interval)
resp.table <- data.frame(matrix(nrow = 1, ncol = 16))
colnames(resp.table)<-c('Date', 'ID','OXY10_channel', 'tank', 'treatment', 'Biovolume', 'length', 'width','b1.Lz',
'b1.Leq', 'b1.Lpc', 'ci.Lz', 'ci.Leq', 'ci.Lpc', 'alpha', 'Notes')
#assign variables in output table
resp.table$Date <- Date
resp.table$ID <- ID
nrows<-nrow(resp.data.2[3,26])
resp.table$OXY10_channel <- OXY10_channel
# take alook at your dataset--------------------------------------------------
resp.data
tank <- "spawn/broodstock"
# Which alpha value gets Leq or Lpc at center of density peak? --------------
alpha <- 0.2
resp.data
resp.table$Biovolume <- Biovolume
resp.table$length <- shell_length
resp.table$width <- shell_width
resp.table$treatment <- treatment
resp.table$tank <- tank
#extract b1
sum.table$Lcompare
resp.table$b1.Lz<-sum.table$Lcompare[1,6]
resp.table$b1.Leq<-sum.table$Lcompare[2,6]
resp.table$b1.Lpc<-sum.table$Lcompare[3,6]
#extract ci range
resp.table$ci.Lz<-sum.table$Lcompare[1,9]
resp.table$ci.Leq<-sum.table$Lcompare[2,9]
resp.table$ci.Lpc<-sum.table$Lcompare[3,9]
resp.table$alpha <- alpha
#Cumulative resp data
all.data <- read.csv("All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv", header=TRUE, sep=",")
update.data <- rbind(all.data , resp.table)
write.table(update.data,"All_data_csv/Cumulative_Output/Cumulative_resp_Output.csv",sep=",", row.names=FALSE)
