library("XML")
xmlfile <- xmlParse("http://192.168.1.100:80/cgi-bin/datalog.xml?sdate=1805010000&days=30") #read in the date plus x days of Apex data
xmlfile <- xmlParse("http://192.168.1.100:80/cgi-bin/datalog.xml?sdate=1805010000&days=15") #read in the date plus x days of Apex data
# modified for personal Lenovo PC at PT Whitney summer 2018
# last modification on 20180629 by SJG
setwd("C:/Users/samjg/Documents/Notebook/data/Geoduck_Conditioning/RAnalysis/Data/pH_Calibration_Files/") #set working directory
Calib.Data <-read.table("20180703.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
R2<-summary(model)$r.squared
plot(mVTris ~ TTris, data=Calib.Data)
abline(lm(mVTris ~ TTris, data=Calib.Data))
legend('topleft', legend = bquote(R^2 == .(format(R2, digits = 3))), bty='n')
# modified for personal Lenovo PC at PT Whitney summer 2018
# last modification on 20180629 by SJG
setwd("C:/Users/samjg/Documents/Notebook/data/Geoduck_Conditioning/RAnalysis/Data/pH_Calibration_Files/") #set working directory
Calib.Data <-read.table("20180703.csv", header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
R2<-summary(model)$r.squared
plot(mVTris ~ TTris, data=Calib.Data)
abline(lm(mVTris ~ TTris, data=Calib.Data))
legend('topleft', legend = bquote(R^2 == .(format(R2, digits = 3))), bty='n')
#rm(list = ls())
library(shiny)
ui <- shinyUI(fluidPage(
mainPanel(
numericInput("size", "Weekly shell size (Âµm)", 300,min = 0, max = 3000),
numericInput("count_cc", "CellCount_chaetoceros(cells/ml)", 0,min = 0, max = 100000000),
numericInput("count_iso", "CellCount_isocrysis(cells/ml)", 0,min = 0, max = 100000000),
numericInput("count_tet", "CellCount_tetraselmis(cells/ml)", 0,min = 0, max = 100000000),
numericInput("perc_cc", "Percent_chaetoceros", 0,min = 0, max = 100),
numericInput("perc_iso", "Percent_isocrysis", 0,min = 0, max = 100),
numericInput("perc_tet", "Percent_tetraselmis", 0,min = 0, max = 100),
sliderInput("density","Number of larvae per tank",value = 500000,min=0,max=2000000,step=50000),
numericInput("num_tanks", "# Tanks with same larvae density & mean size", value = 1,min = 0, max = 10),
textOutput("text_calc"))
))
server <- shinyServer(function(input, output,session){
vals <- reactiveValues()
observe({
vals$size <- input$size
vals$count_cc <- input$count_cc/1000
vals$count_tet <- input$count_tet/1000
vals$count_iso <- input$count_iso/1000
vals$perc_cc <- input$perc_cc
vals$perc_iso <- input$perc_iso
vals$perc_tet <- input$perc_tet
vals$density <- input$density
vals$tanks <- input$num_tanks
vals$s <- (if (input$size <= 209) {
vals$s <- 0.05
} else if (input$size >= 210 & input$size <= 400) {
vals$s <- 0.075
} else if (input$size >= 401 & input$size <= 600) {
vals$s <- 0.1
} else if (input$size >= 601 & input$size <= 800) {
vals$s <- 0.2
} else if  (input$size >= 801) {
vals$s <- 0.3
} else {
vals$s <- 0
})
})
#EQUATION FROM HATCHERY MANUAL FOR BIVALVES
#   Citation:
#   Utting, S.D. and Spencer, B.E., 1991.
#   The hatchery culture of bivalve mollusc larvae and juveniles (Vol. 68).
#   Ministry of Agriculture, Fisheries and Food, Diectorate of Fisheries Research.
# Volume to feed per day = (S * 0.4)/(7 * W * C)
# S = live weight of spat (mg) at the beginning of the week
# W = weight (mg) of one million algae cells (ISO = 0.02mg, TET = 0.2mg, Chaet = 0.007mg; stated in manual)
# C = the cell concentraion (cells/ul) of the culture
output$text_calc <- renderText({
paste("Volume tetraselmis (L) =",
(((((vals$s*vals$density)*0.4)/(7*0.2*vals$count_tet))/(100/vals$perc_tet))),
"Volume isocrysis (L) =",
(((((vals$s*vals$density)*0.4)/(7*0.02*vals$count_iso))/(100/vals$perc_iso))),
"Volume chaetoceros (L) =",
(((((vals$s*vals$density)*0.4)/(7*0.007*vals$count_cc))/(100/vals$perc_cc))),
"Total tetraselmis =",
(((((vals$s*vals$density)*0.4)/(7*0.2*vals$count_tet))/(100/vals$perc_tet))*vals$tanks),
"Total isocrysis =",
(((((vals$s*vals$density)*0.4)/(7*0.02*vals$count_iso))/(100/vals$perc_iso))*vals$tanks),
"Total chaetoceros =",
(((((vals$s*vals$density)*0.4)/(7*0.007*vals$count_cc))/(100/vals$perc_cc))*vals$tanks))
})
})
shinyApp(ui = ui, server = server)
